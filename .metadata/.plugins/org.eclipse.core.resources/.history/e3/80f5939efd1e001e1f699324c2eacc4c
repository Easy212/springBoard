package com.board.controller;

import com.board.VO.BoardVO;
import com.board.dao.BoardDao;

import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class WriteReplyController {

	@Autowired
	private BoardDao boardDao;

	@RequestMapping(value = "/board/writeReply.do", method = RequestMethod.POST)
	public ModelAndView process(@RequestParam("seq") int seq) {
	    BoardVO parentBoard = boardDao.getBoard(seq);
	    ModelAndView mav = new ModelAndView();
	    mav.setViewName("writeReply");
	    mav.addObject("parentBoard", parentBoard);
	    return mav;
	}
	@RequestMapping(value = "/board/saveReply.do", method = RequestMethod.POST)
	public ModelAndView saveReply(@ModelAttribute("boardVO") BoardVO boardVO) {

	    int parentId = boardVO.getParent_id();
	    BoardVO parentBoard = boardDao.getBoard(parentId);

	    // 수정: 새로운 order_no와 depth를 설정
	    boardVO.setDepth(parentBoard.getDepth() + 1);
	    boardVO.setGroup_id(parentBoard.getGroup_id());
		
		int order_no = parentBoard.getOrder_no() + 1;
		List<BoardVO> nextBoards = boardDao.getBoardsGreaterThanOrderNo(boardVO.getGroup_id(), order_no);
		
		// update all order_no greater than the current
		for (BoardVO nextBoard : nextBoards) {
			int updatedOrderNo = nextBoard.getOrder_no() + 1;
			nextBoard.setOrder_no(updatedOrderNo);
			boardDao.updateOrderNo(nextBoard);
		}
		
	    // Set the new reply's order_no to be the parent's order_no + 1
	    boardVO.setOrder_no(order_no);

	    // 답글 저장
	    boardVO.setTitle("[답글] " + boardVO.getTitle());
	    boardDao.insertReply(boardVO);

	    ModelAndView mav = new ModelAndView("redirect:/board/list.do");
	    return mav;
	}
}
