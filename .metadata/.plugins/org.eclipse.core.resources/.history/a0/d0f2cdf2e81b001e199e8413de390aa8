package com.board.controller;


import com.board.VO.BoardVO;
import com.board.dao.BoardDao;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;
import org.springframework.context.annotation.Bean;

import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

@Controller
public class WriteController {
	
	
    @Autowired
    private BoardDao boardDao;
    
    // CommonsMultipartResolver Bean 추가
    @Bean
    public CommonsMultipartResolver multipartResolver() {
        CommonsMultipartResolver resolver = new CommonsMultipartResolver();
        resolver.setMaxUploadSize(10000000); // 업로드 제한 크기를 바이트 단위로 설정하십시오. 10MB = 10000000 바이트.
        return resolver;
    }

    @RequestMapping(value = "/board/save.do", method = RequestMethod.POST)
    public ModelAndView save(@ModelAttribute("boardVO") BoardVO boardVO,
                             @RequestPart("file") MultipartFile file) throws Exception {
        // - 게시물 저장
        boardDao.insertBoard(boardVO);

        // - 파일 저장
        if (!file.isEmpty()) {
        	byte[] bytes = file.getBytes();
        	Path path = Paths.get("C:\\workspace\\spring2\\WebContent\\upload\\" + file.getOriginalFilename());
        	Files.write(path, bytes);
        }

        ModelAndView mav = new ModelAndView("redirect:/board/list.do");
        return mav;
    }
    
    @RequestMapping({ "/board/write.do" })
    public ModelAndView process(){
    System.out.println("글쓰기 레이아웃 전 컨트롤러");
    	ModelAndView mav = new ModelAndView();
    	mav.setViewName("write");

    	return mav;
    }
}